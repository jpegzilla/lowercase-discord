var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var c=0;return $jscomp.iteratorPrototype(function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.polyfill=function(a,c,b,e){if(c){b=$jscomp.global;a=a.split(".");for(e=0;e<a.length-1;e++){var f=a[e];f in b||(b[f]={});b=b[f]}a=a[a.length-1];e=b[a];c=c(e);c!=e&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.from",function(a){return a?a:function(a,b,e){$jscomp.initSymbolIterator();b=null!=b?b:function(a){return a};var c=[],d=a[Symbol.iterator];if("function"==typeof d)for(a=d.call(a);!(d=a.next()).done;)c.push(b.call(e,d.value));else for(var d=a.length,h=0;h<d;h++)c.push(b.call(e,a[h]));return c}},"es6-impl","es3");
$jscomp.checkStringArgs=function(a,c,b){if(null==a)throw new TypeError("The 'this' value for String.prototype."+b+" must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype."+b+" must not be a regular expression");return a+""};
$jscomp.polyfill("String.prototype.startsWith",function(a){return a?a:function(a,b){var c=$jscomp.checkStringArgs(this,a,"startsWith");a+="";for(var f=c.length,d=a.length,h=Math.max(0,Math.min(b|0,c.length)),g=0;g<d&&h<f;)if(c[h++]!=a[g++])return!1;return g>=d}},"es6-impl","es3");require("dotenv").config();
var discord=require("discord.js"),$jscomp$destructuring$var0=require("./config.json"),prefix=$jscomp$destructuring$var0.prefix,handleUserCommands=require("./commands"),client=new discord.Client,https=require("https");client.once("ready",function(){console.log("ready.");setInterval(function(){return https.get("https://lowercase-discord.herokuapp.com/")},3E5)});
client.on("message",function(a){var c=/[A-HJ-Z]|I(?=[A-Za-z0-9])/gm,b=/:(?:[a-zA-Z0-9]+):/gm,e=/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/gm,f=/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$/gm,d=a.member.user.username.toLowerCase();if("lowercase"!=d){var h=a.content,g=0<Array.from(a.attachments).length?{files:[Array.from(a.attachments)[0][1].url]}:null,k=function(a,b){var d=b.replace(c,
"x"),e=b.match(c),f="",g=0;d.split("").forEach(function(a){"x"==a?(f+=e[g].toLowerCase(),++g):f+=a});return{said:"**"+a+" said:** "+f,content:f}};a.content.startsWith(prefix)&&c.test(a.content)?(g=k(d,h).content.replace(prefix,"").trim())&&handleUserCommands(g,a):(b=b.test(a.content)?!0:!1,b||(b=a.content.match(e)?!0:!1),b?!f.test(a.content)&&c.test(a.content)&&f.test(a.content)&&(e=a.content.match(e)[0],f=a.content.replace(e,""),d=k(d,f).said,a.channel.send(""+d+e,g).then(function(){return a["delete"]()})["catch"](function(a){return console.log(a)})):
c.test(a.content)?(d=k(d,h).said,a.channel.send(""+d,g).then(function(){return a["delete"]()})["catch"](function(a){return console.log(a)})):a.content.startsWith(prefix)&&(g=a.content.replace(prefix,"").trim())&&handleUserCommands(g,a))}});client.login(process.env.TOKEN);var express=require("express"),app=express(),port=process.env.PORT||3E3;app.listen(port,function(){console.log("listening on port",port)});
