var $jscomp={scope:{},checkStringArgs:function(a,c,b){if(null==a)throw new TypeError("The 'this' value for String.prototype."+b+" must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype."+b+" must not be a regular expression");return a+""}};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,c,b,e){if(c){b=$jscomp.global;a=a.split(".");for(e=0;e<a.length-1;e++){var d=a[e];d in b||(b[d]={});b=b[d]}a=a[a.length-1];e=b[a];c=c(e);c!=e&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("String.prototype.startsWith",function(a){return a?a:function(a,b){var c=$jscomp.checkStringArgs(this,a,"startsWith");a+="";for(var d=c.length,g=a.length,h=Math.max(0,Math.min(b|0,c.length)),f=0;f<g&&h<d;)if(c[h++]!=a[f++])return!1;return f>=g}},"es6-impl","es3");require("dotenv").config();var discord=require("discord.js"),$jscomp$destructuring$var0=require("./config.json"),prefix=$jscomp$destructuring$var0.prefix,handleUserCommands=require("./commands"),client=new discord.Client;
client.once("ready",function(){console.log("ready.")});
client.on("message",function(a){var c=/[A-HJ-Z]|I(?:[A-Za-z0-9])/gm,b=a.member.user.username,e=a.content,d=function(a,b){var e=b.match(c),d="";b.split("").forEach(function(a){d=0<=e.indexOf(a)?d+a.toLowerCase():d+a});return{said:"**"+a.toLowerCase()+" said:** "+d,content:d}};a.content.startsWith(prefix)&&c.test(a.content)?(b=d(b,e).content.replace(prefix,"").trim())&&handleUserCommands(b,a):c.test(a.content)?(b=d(b,e).said,a.channel.send(""+b),a["delete"]()):a.content.startsWith(prefix)&&(b=a.content.replace(prefix,
"").trim())&&handleUserCommands(b,a)});client.login(process.env.TOKEN);var express=require("express"),app=express(),port=process.env.PORT||3E3;app.listen(port,function(){console.log("listening on port",port)});
